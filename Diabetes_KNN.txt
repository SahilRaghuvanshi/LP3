import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
df=pd.read_csv("diabetes.csv")
df.info()
df.head()
corr = df.corr()
corr.style.background_gradient(cmap="BuGn")
df.drop(['BloodPressure', 'SkinThickness'], axis=1, inplace=True)
df.isna().sum()
df.describe()
#
df.hist(figsize=(20,16))
#
X=df.drop(['Outcome'],axis=1)
y=df['Outcome']
#####KNN
from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.3,random_state=42)
from sklearn.neighbors import KNeighborsClassifier
knn = KNeighborsClassifier(n_neighbors=7)
#
knn.fit(X_train,y_train)
#
y_pred = knn.predict(X_test)
from sklearn import metrics
print("KNN Accuracy: ",metrics.accuracy_score(y_test,y_pred))
#
from sklearn import metrics
matrix = metrics.confusion_matrix(y_test,y_pred)
print(matrix)
#
total_missclassified = matrix[0,1] + matrix[1,0]
print("Total_Miss_Classified :",total_missclassified)
total_examples = matrix[0,0] + matrix[0,1] + matrix[1,0] + matrix[1,1]
print("Total Examples :",total_examples)
error_rate = total_missclassified/total_examples
print("Error rate :",error_rate)
print("Error rate :",1-metrics.accuracy_score(y_test,y_pred))
print("Precision score:",metrics.precision_score(y_test,y_pred))
print("Recall score :",metrics.recall_score(y_test,y_pred))
print("Classification Report :",metrics.classification_report(y_test,y_pred))